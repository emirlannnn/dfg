{"ast":null,"code":"// import React, { useState, useEffect, useContext } from 'react';\n// import RemoteFilter from '../../components/RemoteFilter';\n// import CityFilter from '../../components/CityFilter';\n// import TagFilter from '../../components/TagFilter';\n// import { Link } from 'react-router-dom';\n// import AppContext from '../../helpers/AppContext';\n// import useInfiniteScroll from '../../helpers/useInfiniteScroll';\n// import './list.css';\n// import { Row, Col, Card, List, Layout } from 'antd';\n// function JobsList() {\n//   const [list, setList] = useState([]);\n//   const [filteredList, setFilteredList] = useState([]);\n//   const [cityList, setCityList] = useState([]);\n//   const [tagList, setTagList] = useState([]);\n//   const [remoteFilter, setRemoteFilter] = useState('');\n//   const [cityFilter, setCityFilter] = useState('');\n//   const [tagFilter, setTagFilter] = useState('');\n//   const [isFetching, setIsFetching] = useInfiniteScroll(getList);\n//   const [page, setPage] = useState(1);\n//   const dataContext = useContext(AppContext);\n//   // get data from api\n//   useEffect(() => {\n//     getList();\n//   }, []);\n//   function getList() {\n//     const API_URL = 'https://www.arbeitnow.com/api';\n//     fetch(API_URL + '/job-board-api?page=' + page)\n//       .then((response) => response.json())\n//       .then((jobs) => {\n//         const data = jobs.data.map((j) => {\n//           return {\n//             slug: j.slug,\n//             companyName: j.company_name,\n//             title: j.title,\n//             description: j.description,\n//             remote: j.remote,\n//             url: j.url,\n//             tags: j.tags,\n//             jobTypes: j.job_types,\n//             location: j.location,\n//             createdAt: j.created_at,\n//           };\n//         });\n//         setList([...list, ...data]);\n//         setFilteredList([...list, ...data]);\n//         dataContext.setDataList([...list, ...data]);\n//         getCityList([...list, ...data]);\n//         getTagList([...list, ...data]);\n//         setPage(page + 1);\n//       });\n//   }\n//   // get cities and tags lists\n//   const getCityList = (data) => {\n//     const allList = data.map((j) => j.location);\n//     const uniqList = [...new Set(allList)];\n//     const list = uniqList.sort().map((i) => {\n//       return {\n//         value: i,\n//         label: i,\n//       };\n//     });\n//     setCityList(list);\n//   };\n//   const getTagList = (data) => {\n//     let allList = [];\n//     data.forEach((j) => (allList = [...j.tags, ...allList]));\n//     const uniqList = [...new Set(allList)];\n//     const list = uniqList.sort().map((i) => {\n//       return {\n//         value: i,\n//         label: i,\n//       };\n//     });\n//     setTagList(list);\n//   };\n//   // set filters\n//   const handleRemoteChange = (data) => setRemoteFilter(data);\n//   const handleCityChange = (data) => setCityFilter(data);\n//   const handleTagChange = (data) => setTagFilter(data);\n//   // filter data\n//   useEffect(() => {\n//     filterList(remoteFilter, cityFilter, tagFilter);\n//   }, [remoteFilter, cityFilter, tagFilter]);\n//   function filterList(remote, city, tag) {\n//     let data = list;\n//     if (remote && remote === 'Remote') {\n//       data = data.filter((l) => l.remote);\n//     }\n//     if (remote && remote === 'Office') {\n//       data = data.filter((l) => !l.remote);\n//     }\n//     if (city) {\n//       data = data.filter((l) => l.location === city);\n//     }\n//     if (tag) {\n//       data = data.filter((l) => l.tags.includes(tag));\n//     }\n//     setFilteredList(data);\n//   }\n//   function renderVacancy(title, slug) {\n//     return (\n//       <div className=\"list-item\">\n//         <Link\n//           to={{\n//             pathname: '/vacancy/' + slug,\n//           }}\n//         >\n//           {title}\n//         </Link>\n//       </div>\n//     );\n//   }\n//   return (\n//     <Row class=\"list\">\n//       <Col span={18}>\n//         <List\n//           size=\"large\"\n//           dataSource={filteredList}\n//           renderItem={(item) => renderVacancy(item.title, item.slug)}\n//         />\n//       </Col>\n//       <Col span=\"6\">\n//         <Card className=\"filter-card\">\n//           <RemoteFilter value={remoteFilter} onChange={handleRemoteChange} />\n//           <CityFilter value={cityFilter} cities={cityList} onChange={handleCityChange} />\n//           <TagFilter value={tagFilter} tags={tagList} onChange={handleTagChange} />\n//         </Card>\n//       </Col>\n//     </Row>\n//   );\n// }\n// export default JobsList;","map":{"version":3,"names":[],"sources":["/Users/emirlan/Desktop/ogogo/react/Новая папка/3_lesson/src/routes/list/JobsList.jsx"],"sourcesContent":["// import React, { useState, useEffect, useContext } from 'react';\n// import RemoteFilter from '../../components/RemoteFilter';\n// import CityFilter from '../../components/CityFilter';\n// import TagFilter from '../../components/TagFilter';\n// import { Link } from 'react-router-dom';\n// import AppContext from '../../helpers/AppContext';\n// import useInfiniteScroll from '../../helpers/useInfiniteScroll';\n// import './list.css';\n// import { Row, Col, Card, List, Layout } from 'antd';\n\n// function JobsList() {\n//   const [list, setList] = useState([]);\n//   const [filteredList, setFilteredList] = useState([]);\n//   const [cityList, setCityList] = useState([]);\n//   const [tagList, setTagList] = useState([]);\n//   const [remoteFilter, setRemoteFilter] = useState('');\n//   const [cityFilter, setCityFilter] = useState('');\n//   const [tagFilter, setTagFilter] = useState('');\n//   const [isFetching, setIsFetching] = useInfiniteScroll(getList);\n//   const [page, setPage] = useState(1);\n//   const dataContext = useContext(AppContext);\n\n//   // get data from api\n//   useEffect(() => {\n//     getList();\n//   }, []);\n\n//   function getList() {\n//     const API_URL = 'https://www.arbeitnow.com/api';\n//     fetch(API_URL + '/job-board-api?page=' + page)\n//       .then((response) => response.json())\n//       .then((jobs) => {\n//         const data = jobs.data.map((j) => {\n//           return {\n//             slug: j.slug,\n//             companyName: j.company_name,\n//             title: j.title,\n//             description: j.description,\n//             remote: j.remote,\n//             url: j.url,\n//             tags: j.tags,\n//             jobTypes: j.job_types,\n//             location: j.location,\n//             createdAt: j.created_at,\n//           };\n//         });\n//         setList([...list, ...data]);\n//         setFilteredList([...list, ...data]);\n//         dataContext.setDataList([...list, ...data]);\n//         getCityList([...list, ...data]);\n//         getTagList([...list, ...data]);\n//         setPage(page + 1);\n//       });\n//   }\n\n//   // get cities and tags lists\n//   const getCityList = (data) => {\n//     const allList = data.map((j) => j.location);\n//     const uniqList = [...new Set(allList)];\n//     const list = uniqList.sort().map((i) => {\n//       return {\n//         value: i,\n//         label: i,\n//       };\n//     });\n//     setCityList(list);\n//   };\n\n//   const getTagList = (data) => {\n//     let allList = [];\n//     data.forEach((j) => (allList = [...j.tags, ...allList]));\n//     const uniqList = [...new Set(allList)];\n//     const list = uniqList.sort().map((i) => {\n//       return {\n//         value: i,\n//         label: i,\n//       };\n//     });\n//     setTagList(list);\n//   };\n\n//   // set filters\n//   const handleRemoteChange = (data) => setRemoteFilter(data);\n//   const handleCityChange = (data) => setCityFilter(data);\n//   const handleTagChange = (data) => setTagFilter(data);\n\n//   // filter data\n//   useEffect(() => {\n//     filterList(remoteFilter, cityFilter, tagFilter);\n//   }, [remoteFilter, cityFilter, tagFilter]);\n\n//   function filterList(remote, city, tag) {\n//     let data = list;\n\n//     if (remote && remote === 'Remote') {\n//       data = data.filter((l) => l.remote);\n//     }\n\n//     if (remote && remote === 'Office') {\n//       data = data.filter((l) => !l.remote);\n//     }\n\n//     if (city) {\n//       data = data.filter((l) => l.location === city);\n//     }\n\n//     if (tag) {\n//       data = data.filter((l) => l.tags.includes(tag));\n//     }\n\n//     setFilteredList(data);\n//   }\n\n//   function renderVacancy(title, slug) {\n//     return (\n//       <div className=\"list-item\">\n//         <Link\n//           to={{\n//             pathname: '/vacancy/' + slug,\n//           }}\n//         >\n//           {title}\n//         </Link>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <Row class=\"list\">\n//       <Col span={18}>\n//         <List\n//           size=\"large\"\n//           dataSource={filteredList}\n//           renderItem={(item) => renderVacancy(item.title, item.slug)}\n//         />\n//       </Col>\n//       <Col span=\"6\">\n//         <Card className=\"filter-card\">\n//           <RemoteFilter value={remoteFilter} onChange={handleRemoteChange} />\n//           <CityFilter value={cityFilter} cities={cityList} onChange={handleCityChange} />\n//           <TagFilter value={tagFilter} tags={tagList} onChange={handleTagChange} />\n//         </Card>\n//       </Col>\n//     </Row>\n//   );\n// }\n\n// export default JobsList;\n"],"mappings},"metadata":{},"sourceType":"module"}