{"ast":null,"code":"// import { useState, useContext, useEffect } from 'react';\n// import AppContext from '../../helpers/AppContext';\n// import createDOMPurify from 'dompurify';\n// import { useParams, Link } from 'react-router-dom';\n// import { Row, Col, Card } from 'antd';\n// import './vacancy.css';\n// export default function Vacancy() {\n//   const [vacancy, setVacancy] = useState({});\n//   let params = useParams();\n//   const dataContext = useContext(AppContext);\n//   const DOMPurify = createDOMPurify(window);\n//   // get certain vacancy from data context\n//   const getVacancy = () => {\n//     const job = dataContext.dataList.find((item) => item.slug === params.slug);\n//     setVacancy(job);\n//   };\n//   useEffect(() => {\n//     getVacancy();\n//   }, []);\n//   return (\n//     <Card title={vacancy.title} headStyle={{ fontWeight: 'bold', fontSize: '24px' }}>\n//       <Row justify=\"space-around\">\n//         <Col span={20}>\n//           {\n//             <section\n//               dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(vacancy.description) }}\n//             />\n//           }\n//         </Col>\n//         <Col span={4}>\n//           <section>\n//             <div>\n//               <span>Company: </span>\n//               <span className=\"company\">{vacancy.companyName}</span>\n//             </div>\n//             <div>\n//               <span>Location:</span>\n//               <span className=\"location\">{vacancy.location}</span>\n//             </div>\n//             <div>{vacancy.remote ? <div className=\"label remote\">Remote</div> : null}</div>\n//             <div>\n//               {vacancy.jobTypes && vacancy.jobTypes.length > 0\n//                 ? vacancy.jobTypes.map((type, index) => {\n//                     return (\n//                       <div key={index} className=\"label type\">\n//                         {type.toLowerCase()}\n//                       </div>\n//                     );\n//                   })\n//                 : null}\n//             </div>\n//             <div>\n//               {vacancy.tags && vacancy.tags.length > 0\n//                 ? vacancy.tags.map((tag, index) => {\n//                     return (\n//                       <div key={index} className=\"label tag \">\n//                         {tag.toLowerCase()}\n//                       </div>\n//                     );\n//                   })\n//                 : null}\n//             </div>\n//           </section>\n//         </Col>\n//       </Row>\n//       <Row className=\"btn-actions\">\n//         <Link to={{ pathname: '/' }} className=\"link\">\n//           Back\n//         </Link>\n//         <a href={vacancy.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"link\">\n//           Apply\n//         </a>\n//       </Row>\n//     </Card>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/Users/emirlan/Desktop/ogogo/react/Новая папка/3_lesson/src/routes/vacancy/Vacancy.jsx"],"sourcesContent":["// import { useState, useContext, useEffect } from 'react';\n// import AppContext from '../../helpers/AppContext';\n// import createDOMPurify from 'dompurify';\n// import { useParams, Link } from 'react-router-dom';\n// import { Row, Col, Card } from 'antd';\n// import './vacancy.css';\n\n// export default function Vacancy() {\n//   const [vacancy, setVacancy] = useState({});\n//   let params = useParams();\n//   const dataContext = useContext(AppContext);\n\n//   const DOMPurify = createDOMPurify(window);\n\n//   // get certain vacancy from data context\n//   const getVacancy = () => {\n//     const job = dataContext.dataList.find((item) => item.slug === params.slug);\n//     setVacancy(job);\n//   };\n\n//   useEffect(() => {\n//     getVacancy();\n//   }, []);\n\n//   return (\n//     <Card title={vacancy.title} headStyle={{ fontWeight: 'bold', fontSize: '24px' }}>\n//       <Row justify=\"space-around\">\n//         <Col span={20}>\n//           {\n//             <section\n//               dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(vacancy.description) }}\n//             />\n//           }\n//         </Col>\n//         <Col span={4}>\n//           <section>\n//             <div>\n//               <span>Company: </span>\n//               <span className=\"company\">{vacancy.companyName}</span>\n//             </div>\n//             <div>\n//               <span>Location:</span>\n//               <span className=\"location\">{vacancy.location}</span>\n//             </div>\n//             <div>{vacancy.remote ? <div className=\"label remote\">Remote</div> : null}</div>\n//             <div>\n//               {vacancy.jobTypes && vacancy.jobTypes.length > 0\n//                 ? vacancy.jobTypes.map((type, index) => {\n//                     return (\n//                       <div key={index} className=\"label type\">\n//                         {type.toLowerCase()}\n//                       </div>\n//                     );\n//                   })\n//                 : null}\n//             </div>\n//             <div>\n//               {vacancy.tags && vacancy.tags.length > 0\n//                 ? vacancy.tags.map((tag, index) => {\n//                     return (\n//                       <div key={index} className=\"label tag \">\n//                         {tag.toLowerCase()}\n//                       </div>\n//                     );\n//                   })\n//                 : null}\n//             </div>\n//           </section>\n//         </Col>\n//       </Row>\n//       <Row className=\"btn-actions\">\n//         <Link to={{ pathname: '/' }} className=\"link\">\n//           Back\n//         </Link>\n//         <a href={vacancy.url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"link\">\n//           Apply\n//         </a>\n//       </Row>\n//     </Card>\n//   );\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}